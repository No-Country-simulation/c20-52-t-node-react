// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(uuid())
  firstName    String
  lastName     String
  age          Int
  email        String
  password     String
  birthday     DateTime
  gender       String
  role         Role          @default(normal)
  phone        String
  status       Status        @default(active)
  createdAt    DateTime      @default(now())
  Appointments Appointment[]
}

model Doctor {
  id               String        @id @default(uuid())
  firstName        String
  lastName         String
  age              Int
  email            String
  password         String
  birthday         DateTime
  gender           String
  role             Role          @default(doctor)
  DoctorSpeciality String
  license          String
  phone            String
  status           Status        @default(active)
  Appointments     Appointment[]
  createdAt        DateTime      @default(now())
}

model Appointment {
  id          String    @id @default(uuid())
  user        User?     @relation(fields: [userId], references: [id])
  userId      String
  Doctor      Doctor?   @relation(fields: [doctorId], references: [id])
  doctorId    String?
  date        DateTime
  status      String
  description String
  diagnosis   String
  treatment   String
  payments    Payment[]
  createdAt   DateTime  @default(now())
}

model Payment {
  id            String       @id @default(uuid())
  appointment   Appointment? @relation(fields: [appointmentId], references: [id])
  appointmentId String
  paymentMethod String
  description   String
  quantity      Int
}

enum Role {
  normal
  doctor
}

enum Status {
  active
  inactive
}
